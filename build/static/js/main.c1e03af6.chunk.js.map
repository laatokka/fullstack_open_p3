{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/RenderPersons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","submit","name","handleNewPerson","number","handleNewNumber","onSubmit","value","onChange","type","Person","deletePerson","person","persons","find","p","key","onClick","id","RenderPersons","filter","toLowerCase","includes","map","Filter","handleFilter","Notification","message","className","baseUrl","axios","get","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newPhoneNumber","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","personService","then","response","data","event","target","preventDefault","personObject","window","confirm","console","log","JSON","parse","config","catch","error","setTimeout","concat","deletion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e03af6.chunk.js","sourcesContent":["import React from 'react'\nconst PersonForm = ({ submit, name, handleNewPerson, number, handleNewNumber }) => (\n    <form onSubmit={submit}>\n        <div>\n            name: <input\n                value={name}\n                onChange={handleNewPerson} \n                    \n                />\n        </div>\n        <div>\n            number: <input\n                value={number}\n                onChange={handleNewNumber} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ name, number, deletePerson, persons }) => {\n    const person = persons.find(p => p.name === name)\n    \n    return (\n        <li key={name}>\n            {name} {number} \n            <button onClick={() => deletePerson(person.id)}>delete</button>\n        </li>\n    )\n}\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst RenderPersons = ({ persons, filter, deletePerson }) => (\n    \n    persons\n    .filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(p => <Person key={p.name} name={p.name} number={p.number} deletePerson={deletePerson} persons={persons} />\n    )\n)\n\nexport default RenderPersons","import React from 'react'\n\nconst Filter = ({ filter, handleFilter }) => (\n    <div> Filter:\n        <input\n            value={filter}\n            onChange={handleFilter}\n        />\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://fast-hollows-96713.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios.get(baseUrl)\n\nconst create = newObject => axios.post(baseUrl, newObject)\n\nconst update = (id, newObject) => axios.put(`${baseUrl}/${id}`, newObject)\n\nconst deleteP = (id) => axios.delete(`${baseUrl}/${id}`)\n\nexport default { getAll, create, update, deleteP }","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport RenderPersons from './components/RenderPersons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newPhoneNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    const hook = () => {\n        personService\n            .getAll()\n            .then(response => {\n                setPersons(response.data)\n            })\n    }\n\n    useEffect(hook, [])\n\n    const handleNewPerson = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilter = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        const personObject = {\n            name: newName,\n            number: newPhoneNumber\n        }\n\n        const person = persons.find(p => p.name === newName)\n\n        if (person) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                personObject.id = person.id\n                personService\n                    .update(person.id, personObject)\n                    .then(response => {\n                        console.log(response)\n                        setPersons(\n                            persons.map(p => p.id !== response.data.id\n                                ? p\n                                : JSON.parse(response.config.data)\n                            )\n                        )\n                    }).catch(error => {\n                        console.log(error)\n                        setErrorMessage(`${person.name} was removed from server...`)\n                        setPersons(persons.filter(p => p.name !== person.name))\n                    })\n                setErrorMessage(`${person.name} values successfully altered!`)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 3000)\n            }\n            return\n        }\n\n        personService\n            .create(personObject)\n            .then(response => {\n                setPersons(persons.concat(response.data))\n                setNewName('')\n                setNewNumber('')\n                setErrorMessage(`${newName} was added`)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 3000)\n            }).catch(error => {\n                setErrorMessage(error.response.data.error)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 3000)\n            })\n    }\n\n    const deletePerson = (id) => {\n        const person = persons.find(p => p.id === id)\n\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personService\n                .deleteP(id).then(deletion => {\n                    setPersons(persons.filter(p => p.id !== id))\n                    setErrorMessage(`${person.name} deleted!`)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 3000)\n                })\n                .catch(error => {\n                    setErrorMessage(\"Error occured. Deletion unsuccessful.\")\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={errorMessage} />\n            <Filter filter={filter} handleFilter={handleFilter} />\n            <PersonForm submit={addPerson} name={newName}\n                handleNewPerson={handleNewPerson} number={newPhoneNumber}\n                handleNewNumber={handleNewNumber}\n            />\n            <h2>Numbers</h2>\n            <RenderPersons persons={persons} filter={filter} deletePerson={deletePerson} />\n\n        </div >\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}